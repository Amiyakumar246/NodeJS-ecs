version: 0.2
run-as: root

env:
   variables:
           IMAGE_REPO_NAME: "tanumoy"
           CONTAINER_NAME: "TanumoyContainer1"
   parameter-store:
           DB_HOST: "/Tanumoy/db_host"

phases:
  pre_build:
    commands:
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 421320058418.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=421320058418.dkr.ecr.us-east-1.amazonaws.com/tanumoy
      - docker pull 421320058418.dkr.ecr.us-east-1.amazonaws.com/tanumoy:alpine
      - docker tag 421320058418.dkr.ecr.us-east-1.amazonaws.com/tanumoy:alpine alpine:latest
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-10)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:         
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG --build-arg mongo=$DB_HOST .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG 421320058418.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - docker push 421320058418.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json

artifacts:
    files:
      - imageDetail.json
      - appspec.yml
      - taskdef.json
